{"version":3,"file":"index.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/cache/translation-cache.ts","../src/exceptions/verblaze-exception.ts","../src/managers/translation-manager.ts","../src/context/verblaze-context.tsx"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { Language } from '../models/language'\nimport { TranslationFile } from '../models/translation'\n\nexport class TranslationCache {\n  private static readonly TRANSLATIONS_KEY = 'verblaze_translations'\n  private static readonly CURRENT_LANGUAGE_KEY = 'verblaze_current_language'\n\n  static async saveTranslations(\n    translations: Map<string, TranslationFile>\n  ): Promise<void> {\n    try {\n      const serializedTranslations = JSON.stringify(\n        Array.from(translations.entries())\n      )\n      localStorage.setItem(this.TRANSLATIONS_KEY, serializedTranslations)\n    } catch (error) {\n      console.error('Translation cache save error:', error)\n    }\n  }\n\n  static async getTranslations(): Promise<Map<string, TranslationFile> | null> {\n    try {\n      const serializedTranslations = localStorage.getItem(this.TRANSLATIONS_KEY)\n      if (!serializedTranslations) return null\n\n      const entries = JSON.parse(serializedTranslations)\n      return new Map(entries)\n    } catch (error) {\n      console.error('Translation cache get error:', error)\n      return null\n    }\n  }\n\n  static async saveCurrentLanguage(language: Language): Promise<void> {\n    try {\n      localStorage.setItem(this.CURRENT_LANGUAGE_KEY, JSON.stringify(language))\n    } catch (error) {\n      console.error('Current language save error:', error)\n    }\n  }\n\n  static async getCurrentLanguage(): Promise<Language | null> {\n    try {\n      const serializedLanguage = localStorage.getItem(this.CURRENT_LANGUAGE_KEY)\n      if (!serializedLanguage) return null\n\n      return JSON.parse(serializedLanguage)\n    } catch (error) {\n      console.error('Current language get error:', error)\n      return null\n    }\n  }\n\n  static async clearCache(): Promise<void> {\n    try {\n      localStorage.removeItem(this.TRANSLATIONS_KEY)\n    } catch (error) {\n      console.error('Cache clear error:', error)\n    }\n  }\n}\n","export class VerblazeException extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'VerblazeException'\n  }\n}\n","import { Language } from '../models/language'\nimport { TranslationFile, TranslationList } from '../models/translation'\nimport { TranslationCache } from '../cache/translation-cache'\nimport { VerblazeException } from '../exceptions/verblaze-exception'\n\nexport class TranslationManager {\n  private static instance: TranslationManager\n  private translations: Map<string, TranslationFile> = new Map()\n  private currentLanguage: Language | null = null\n  private supportedLanguages: Language[] = []\n  private baseLanguage: Language | null = null\n  private apiKey: string | null = null\n  private readonly baseUrl = 'https://api.verblaze.com/v1'\n\n  private constructor() {}\n\n  static getInstance(): TranslationManager {\n    if (!this.instance) {\n      this.instance = new TranslationManager()\n    }\n    return this.instance\n  }\n\n  async configure(apiKey: string): Promise<void> {\n    this.apiKey = apiKey\n    await this.checkVersion()\n    await this.fetchSupportedLanguages()\n\n    const savedLanguage = await TranslationCache.getCurrentLanguage()\n    if (savedLanguage) {\n      this.currentLanguage = savedLanguage\n    }\n\n    await this.fetchTranslations()\n  }\n\n  private async checkVersion(): Promise<void> {\n    try {\n      const currentVersion =\n        localStorage.getItem('verblaze_translation_version') || '1'\n      const response = await fetch(`${this.baseUrl}/version-check`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': this.apiKey!\n        },\n        body: JSON.stringify({\n          currentVersion: parseInt(currentVersion),\n          platform: 'react'\n        })\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        if (data.data.needsUpdate) {\n          localStorage.setItem(\n            'verblaze_translation_version',\n            data.data.latestVersion\n          )\n          await this.fetchTranslations()\n          await TranslationCache.clearCache()\n        }\n      }\n    } catch (error) {\n      throw new VerblazeException(`Version check failed: ${error}`)\n    }\n  }\n\n  private async fetchSupportedLanguages(): Promise<void> {\n    try {\n      const response = await fetch(`${this.baseUrl}/supported-languages`, {\n        headers: {\n          'x-api-key': this.apiKey!\n        }\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        this.supportedLanguages = data.data.supportedLanguages\n        this.baseLanguage = data.data.baseLanguage\n      }\n    } catch (error) {\n      throw new VerblazeException(\n        `Failed to fetch supported languages: ${error}`\n      )\n    }\n  }\n\n  private async fetchTranslations(): Promise<void> {\n    try {\n      const cachedTranslations = await TranslationCache.getTranslations()\n      if (cachedTranslations) {\n        console.log('Using cached translations:', cachedTranslations)\n        this.translations = cachedTranslations\n        return\n      }\n\n      console.log(\n        'Fetching translations for languages:',\n        this.supportedLanguages\n      )\n\n      const response = await fetch(`${this.baseUrl}/translations/multiple`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': this.apiKey!\n        },\n        body: JSON.stringify({\n          languages: this.supportedLanguages.map((lang) => lang.code)\n        })\n      })\n\n      console.log('Translation API Response Status:', response.status)\n\n      if (response.ok) {\n        const data = await response.json()\n        console.log('Raw API Response:', data)\n\n        const translations = new Map<string, TranslationFile>()\n        const translationsData = data.data.translations as Record<\n          string,\n          TranslationList\n        >\n\n        console.log('Parsed translations data:', translationsData)\n\n        for (const [langCode, translationList] of Object.entries(\n          translationsData\n        )) {\n          console.log(`Processing language: ${langCode}`, translationList)\n\n          if (Array.isArray(translationList)) {\n            for (const file of translationList) {\n              const key = `${file.file_key}_${langCode}`\n              console.log(`Adding translation file: ${key}`, file)\n\n              translations.set(key, {\n                fileTitle: file.file_title,\n                fileKey: file.file_key,\n                values: file.values\n              })\n            }\n          } else {\n            console.warn(\n              `Invalid translation list for language ${langCode}:`,\n              translationList\n            )\n          }\n        }\n\n        console.log('Final translations map:', translations)\n        this.translations = translations\n        await TranslationCache.saveTranslations(translations)\n      } else {\n        console.error('Translation API Error:', await response.text())\n      }\n    } catch (error) {\n      console.error('Translation fetch error:', error)\n      throw new VerblazeException(`Failed to fetch translations: ${error}`)\n    }\n  }\n\n  getTranslation(key: string, language?: string): string {\n    const langCode =\n      language || this.currentLanguage?.code || this.baseLanguage?.code\n\n    console.log('Getting translation:', {\n      key,\n      requestedLanguage: language,\n      currentLanguage: this.currentLanguage?.code,\n      baseLanguage: this.baseLanguage?.code,\n      resolvedLanguage: langCode\n    })\n\n    if (!langCode) throw new VerblazeException('No language selected')\n\n    const [fileKey, translationKey] = key.split('.')\n    const translationFileKey = `${fileKey}_${langCode}`\n\n    console.log('Looking up translation:', {\n      fileKey,\n      translationKey,\n      translationFileKey,\n      availableTranslations: Array.from(this.translations.keys())\n    })\n\n    const translationFile = this.translations.get(translationFileKey)\n    if (!translationFile) {\n      console.warn('Translation file not found:', {\n        fileKey,\n        langCode,\n        availableFiles: Array.from(this.translations.keys())\n      })\n      throw new VerblazeException(\n        `Translation file not found for key: ${fileKey} in language: ${langCode}`\n      )\n    }\n\n    const translation = translationFile.values[translationKey]\n    if (!translation) {\n      console.warn('Translation key not found:', {\n        translationKey,\n        fileKey,\n        availableKeys: Object.keys(translationFile.values)\n      })\n      throw new VerblazeException(\n        `Translation key not found: ${translationKey} in file: ${fileKey}`\n      )\n    }\n\n    return translation\n  }\n\n  async setLanguage(languageCode: string): Promise<void> {\n    const language = this.supportedLanguages.find(\n      (lang) => lang.code === languageCode\n    )\n    if (!language) {\n      throw new VerblazeException(`Language not supported: ${languageCode}`)\n    }\n\n    this.currentLanguage = language\n    await TranslationCache.saveCurrentLanguage(language)\n  }\n\n  getSupportedLanguages(): Language[] {\n    return this.supportedLanguages\n  }\n\n  getCurrentLanguage(): Language | null {\n    return this.currentLanguage\n  }\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Language } from '../models/language';\nimport { TranslationManager } from '../managers/translation-manager';\n\ninterface VerblazeContextType {\n    isConfigured: boolean;\n    currentLanguage: Language | null;\n    supportedLanguages: Language[];\n    setLanguage: (languageCode: string) => Promise<void>;\n    translate: (key: string, language?: string) => string;\n}\n\nconst VerblazeContext = createContext<VerblazeContextType | undefined>(undefined);\n\ninterface VerblazeProviderProps {\n    children: React.ReactNode;\n    apiKey: string;\n}\n\nexport const VerblazeProvider: React.FC<VerblazeProviderProps> = ({ children, apiKey }) => {\n    const [isConfigured, setIsConfigured] = useState(false);\n    const [currentLanguage, setCurrentLanguage] = useState<Language | null>(null);\n    const [supportedLanguages, setSupportedLanguages] = useState<Language[]>([]);\n    const manager = TranslationManager.getInstance();\n\n    useEffect(() => {\n        const initialize = async () => {\n            try {\n                await manager.configure(apiKey);\n                setIsConfigured(true);\n                setCurrentLanguage(manager.getCurrentLanguage());\n                setSupportedLanguages(manager.getSupportedLanguages());\n            } catch (error) {\n                console.error('Verblaze initialization error:', error);\n            }\n        };\n\n        initialize();\n    }, [apiKey]);\n\n    const setLanguage = async (languageCode: string) => {\n        await manager.setLanguage(languageCode);\n        setCurrentLanguage(manager.getCurrentLanguage());\n    };\n\n    const translate = (key: string, language?: string): string => {\n        try {\n            return manager.getTranslation(key, language);\n        } catch (error) {\n            console.error('Translation error:', error);\n            return key; // Hata durumunda key'i döndür\n        }\n    };\n\n    return (\n        <VerblazeContext.Provider\n            value={{\n                isConfigured,\n                currentLanguage,\n                supportedLanguages,\n                setLanguage,\n                translate\n            }}\n        >\n            {children}\n        </VerblazeContext.Provider>\n    );\n};\n\nexport const useVerblaze = () => {\n    const context = useContext(VerblazeContext);\n    if (context === undefined) {\n        throw new Error('useVerblaze must be used within a VerblazeProvider');\n    }\n    return context;\n};\n\nexport const vbt = (key: string, language?: string): string => {\n    const context = useVerblaze();\n    return context.translate(key, language);\n};"],"names":["TranslationCache","saveTranslations","translations","serializedTranslations","JSON","stringify","Array","from","entries","localStorage","setItem","_this","TRANSLATIONS_KEY","error","console","Promise","resolve","e","reject","getTranslations","getItem","_this2","parse","Map","saveCurrentLanguage","language","_this3","CURRENT_LANGUAGE_KEY","getCurrentLanguage","serializedLanguage","_this4","clearCache","removeItem","_this5","VerblazeException","_Error","message","call","name","_inheritsLoose","_wrapNativeSuper","Error","TranslationManager","getInstance","instance","_proto","prototype","configure","apiKey","checkVersion","then","fetchSupportedLanguages","savedLanguage","currentLanguage","fetchTranslations","_catch","currentVersion","fetch","baseUrl","method","headers","body","parseInt","platform","response","_temp2","ok","json","data","_temp","needsUpdate","latestVersion","_temp3","supportedLanguages","baseLanguage","cachedTranslations","log","languages","map","lang","code","status","_temp4","translationsData","_i","_Object$entries","Object","length","_Object$entries$_i","langCode","translationList","isArray","_iterator","_createForOfIteratorHelperLoose","_step","done","file","value","key","file_key","set","fileTitle","file_title","fileKey","values","warn","text","_response$text","getTranslation","_this$currentLanguage","_this$baseLanguage","requestedLanguage","_this$currentLanguage2","_this$baseLanguage2","resolvedLanguage","_key$split","split","translationKey","translationFileKey","availableTranslations","keys","translationFile","get","availableFiles","translation","availableKeys","setLanguage","languageCode","find","getSupportedLanguages","VerblazeContext","createContext","undefined","VerblazeProvider","_ref","children","_useState","useState","isConfigured","setIsConfigured","_useState2","setCurrentLanguage","_useState3","setSupportedLanguages","manager","useEffect","initialize","translate","React","Provider","useVerblaze","context","useContext","vbt"],"mappings":"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"}